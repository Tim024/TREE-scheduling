# -*-makefile-*-
#
# This file is part of HiKoB Openlab.
#
# HiKoB Openlab is free software: you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation, version 3.
#
# HiKoB Openlab is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with HiKoB Openlab. If not, see
# <http://www.gnu.org/licenses/>.
#
# Copyright (C) 2011,2012,2013 HiKoB.
#

BOARD ?= m3
BOARDS = m3 a8-m3
IOTLAB_DIR = $(ARCH_PATH)/platform/iotlab

#### Compilation and linker flags and options ####

GCCPREFIX = arm-none-eabi
CC        = ${GCCPREFIX}-gcc
LD        = ${GCCPREFIX}-gcc
AS        = ${GCCPREFIX}-as
AR        = ${GCCPREFIX}-ar
NM        = ${GCCPREFIX}-nm
OBJCOPY   = ${GCCPREFIX}-objcopy
STRIP     = ${GCCPREFIX}-strip
OBJDUMP   = ${GCCPREFIX}-objdump

# Used by Openlab
CFLAGS   += -DPLATFORM_OS=CONTIKI

CFLAGS   += -Os
CFLAGS   += -Wall
ifeq ($(WERROR),1)
  CFLAGS += -Werror
endif
CFLAGS   += -Wimplicit -Wpointer-arith

CFLAGS   += -DGCC_ARMCM3 -DENABLE_DEBUG=${DEBUG}
CFLAGS   += -gdwarf-2 -fno-builtin -fsingle-precision-constant
CFLAGS   += -mcpu=cortex-m3 -mthumb -mthumb-interwork -mfix-cortex-m3-ldrd -msoft-float
CFLAGS   += -mno-unaligned-access

# Silent strict-aliasing warning for the moment
CFLAGS   += -fno-strict-aliasing

# escape characters conflicts with SLIP
CFLAGS   += -DNO_DEBUG_COLOR

LDFLAGS  += -nostartfiles
LDFLAGS  += -nodefaultlibs
LDFLAGS  += -T${LINKERSCRIPT}
LDFLAGS  += -mcpu=cortex-m3 -mthumb -mthumb-interwork

OOCD_PORT   = 123
GDB_PORT    = 3${OOCD_PORT}
TELNET_PORT = 4${OOCD_PORT}
TCL_PORT    = 5${OOCD_PORT}

OOCD        = openocd

DEBUG            = 1
CFLAGS          += -DKEEP_UART=1
LINKERSCRIPT     = $(IOTLAB_DIR)/openlab/platform/scripts/stm32f103rey6.ld

#### Board-specific makefile ####

include $(IOTLAB_DIR)/$(BOARD)/Makefile.include

#### Source files and directories ####

CONTIKI_TARGET_DIRS += .               \
         dev                           \
         $(BOARD)                      \
         openlab/drivers               \
         openlab/lib                   \
         openlab/net                   \
         openlab/periph                \
         openlab/platform

OPENLAB_SRC +=                            \
            cortex-m3/boot.c              \
            cortex-m3/nvic.c              \
            stm32/dma.c                   \
            stm32/i2c.c                   \
            stm32/spi.c                   \
            stm32/timer.c                 \
            stm32/uart.c                  \
            stm32/unique_id.c             \
            stm32/usb.c                   \
            stm32/watchdog.c              \
            stm32f1xx/adc.c               \
            stm32f1xx/afio.c              \
            stm32f1xx/boot.c              \
            stm32f1xx/exti.c              \
            stm32f1xx/flash.c             \
            stm32f1xx/gpio.c              \
            stm32f1xx/rcc.c               \
            stm32f1xx/rcc_clock.c         \
            stm32f1xx/rcc_sysclk.c        \
            stm32f1xx/rtc.c               \
            stm32f1xx/sdio.c              \
            stm32f1xx/stm32f1xx.c         \
            softtimer/soft_timer_delay.c  \
            rf2xx/rf2xx.c

OPENLAB_INCLUDE_PATH +=                       \
  -I$(IOTLAB_DIR)/openlab                     \
  -I$(IOTLAB_DIR)/openlab/drivers/cortex-m3   \
  -I$(IOTLAB_DIR)/openlab/drivers/stm32       \
  -I$(IOTLAB_DIR)/openlab/drivers/stm32f1xx

PLATFORM_INCLUDE_PATH += -I$(IOTLAB_DIR) $(OPENLAB_INCLUDE_PATH)

CONTIKI_TARGET_SOURCEFILES +=          \
         $(OPENLAB_SRC)                \
         platform.c                    \
         leds.c                        \
         int-master.c                  \
         sensors.c                     \
         slip.c                        \
         clock-systick.c               \
         watchdog.c                    \
         radio-rf2xx.c                 \
         uart1.c                       \
         slip-arch.c                   \
         openlab-port.c                \
         rtimer-arch.c                 \
         leds-arch.c                   \
         platform-sensors.c

CONTIKI_SOURCEFILES += $(CONTIKI_TARGET_SOURCEFILES)

#### Rules ####

##
## We need to redefine the default compilation target so
## that the build process is not confused
##

#
## Create openlab subdirectory in $(OBJECTDIR)
#
OPENLAB_SRC_SUBDIR      = $(sort $(dir $(OPENLAB_SRC)))
OPENLAB_PLATFORM_SUBDIR = $(addprefix $(OBJECTDIR)/, $(OPENLAB_SRC_SUBDIR))
$(OPENLAB_PLATFORM_SUBDIR): %: $(OBJECTDIR)
	@mkdir -p $@

# Directly depending of the directories produces some
#     make: *** No rule to make target `obj_iotlab-m3/cortex-m3', needed by
#     `obj_iotlab-m3/hello-world.o'.  Stop.
# For a not found reason
.PHONY: obj_subdirs
obj_subdirs: | $(OPENLAB_PLATFORM_SUBDIR)

CUSTOM_RULE_C_TO_OBJECTDIR_O = "defined"
$(OBJECTDIR)/%.o: %.c | $(OBJECTDIR) obj_subdirs
	$(TRACE_CC)
	$(Q)$(CC) $(CFLAGS) $(PLATFORM_INCLUDE_PATH) -MMD -c $< -o $@
	@$(FINALIZE_DEPENDENCY)

CUSTOM_RULE_C_TO_CE = "defined"
%.ce: %.c
	$(CC) $(CFLAGS) $(PLATFORM_INCLUDE_PATH) -c $< -o $*.o
	$(GCCPREFIX)-ld -r -T $(IOTLAB_DIR)/merge-segments.ld $*.o -o $@
	$(STRIP) --strip-unneeded -g -x $@

%.od: %.$(TARGET)
	$(OBJDUMP) -S $< > $@

%.flash: %.$(TARGET)
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "gdb_port ${GDB_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "tcl_port ${TCL_PORT}" \
	-c "init" \
	-c "targets" \
	-c "reset halt"	\
	-c "reset init"	\
	-c "flash write_image erase $<" \
	-c "verify_image $<" \
	-c "reset run" \
	-c "shutdown"

%.upload: %.flash

##
## make debug will start a GDB SRP socket on port 3333
##

debug:
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "tcl_port ${TCL_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "init" \
	-c "targets" \

reset:
	$(OOCD) \
	-f "${OOCD_ITF}" \
	-f "target/${OOCD_TARGET}.cfg" \
	-c "gdb_port ${GDB_PORT}" \
	-c "tcl_port ${TCL_PORT}" \
	-c "telnet_port ${TELNET_PORT}" \
	-c "init" \
	-c "targets" \
	-c "reset run" \
	-c "shutdown"
